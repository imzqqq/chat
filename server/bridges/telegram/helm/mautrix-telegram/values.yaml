image:
  repository: dock.mau.dev/tulir/mautrix-telegram
  tag: latest
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

service:
  type: ClusterIP
  port: 29317

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Postgres pod configs
postgresql:
  enabled: true
  postgresqlDatabase: mxtg
  postgresqlPassword: SET TO RANDOM STRING
  persistence:
    size: 2Gi
  resources:
    requests:
      memory: 256Mi
      cpu: 100m

# Homeserver details
homeserver:
  # The address that this appservice can use to connect to the homeserver.
  address: https://example.com
  # The domain of the homeserver (for MXIDs, etc).
  domain: example.com
  # Whether or not to verify the SSL certificate of the homeserver.
  # Only applies if address starts with https://
  verifySSL: true

# Application service host/registration related details
# Changing these values requires regeneration of the registration.
appservice:
  # The maximum body size of appservice API requests (from the homeserver) in mebibytes
  # Usually 1 is enough, but on high-traffic bridges you might need to increase this to avoid 413s
  maxBodySize: 1

  # Public part of web server for out-of-Matrix interaction with the bridge.
  # Used for things like login if the user wants to make sure the 2FA password isn't stored in
  # the HS database.
  public:
    # Whether or not the public-facing endpoints should be enabled.
    enabled: true
    # The prefix to use in the public-facing endpoints.
    prefix: /public
    # The base URL where the public-facing endpoints are available. The prefix is not added
    # implicitly.
    external: https://example.com/public

  # Provisioning API part of the web server for automated portal creation and fetching information.
  # Used by things like Dimension (https://dimension.t2bot.io/).
  provisioning:
    # Whether or not the provisioning API should be enabled.
    enabled: true
    # The prefix to use in the provisioning API endpoints.
    prefix: /chat/provision/v1
    # The shared secret to authorize users of the API.
    shared_secret: SET TO RANDOM STRING

  id: telegram
  botUsername: telegrambot
  # Display name and avatar for bot. Set to "remove" to remove display name/avatar, leave empty
  # to leave display name/avatar as-is.
  botDisplayname: Telegram bridge bot
  botAvatar: mxc://maunium.net/tJCRmUyJDsgRNgqhOgoiHWbX

  # Community ID for bridged users (changes registration file) and rooms.
  # Must be created manually.
  communityID: false

  # Authentication tokens for AS <-> HS communication. Autogenerated; do not modify.
  asToken: SET TO RANDOM STRING
  hsToken: SET TO RANDOM STRING

# The keys below can be used to override the configs in the base config:
# https://github.com/tulir/mautrix-telegram/blob/master/example-config.yaml
# Note that the "appservice" and "homeserver" sections are above and slightly different than the base.

# Bridge config
bridge:
  # Localpart template of MXIDs for Telegram users.
  # {userid} is replaced with the user ID of the Telegram user.
  username_template: "telegram_{userid}"
  # Localpart template of room aliases for Telegram portal rooms.
  # {groupname} is replaced with the name part of the public channel/group invite link ( https://t.me/{} )
  alias_template: "telegram_{groupname}"

  # Permissions for using the bridge.
  # Permitted values:
  #   relaybot - Only use the bridge via the relaybot, no access to commands.
  #       user - Relaybot level + access to commands to create bridges.
  #  puppeting - User level + logging in with a Telegram account.
  #       full - Full access to use the bridge, i.e. previous levels + Matrix login.
  #      admin - Full access to use the bridge and some extra administration commands.
  # Permitted keys:
  #        * - All Matrix users
  #   domain - All users on that homeserver
  #     mxid - Specific user
  permissions:
    "*": "relaybot"
    "public.example.com": "user"
    "example.com": "full"
    "@admin:example.com": "admin"

# Prometheus telemetry config.
metrics:
  enabled: false
  listen_port: 8000

# Telegram config
telegram:
  # Get your own API keys at https://my.telegram.org/apps
  api_id: 12345
  api_hash: tjyd5yge35lbodk1xwzw2jstp90k55qz
  # (Optional) Create your own bot at https://t.me/BotFather
  # bot_token: 123456789:

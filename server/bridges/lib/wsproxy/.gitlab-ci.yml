stages:
- build
- build docker
- manifest

build:
  stage: build
  image: golang:1-alpine
  cache:
    paths:
    - .cache
  variables:
    CGO_ENABLED: "0"
  before_script:
  - mkdir -p .cache
  - export GOPATH="$CI_PROJECT_DIR/.cache"
  - export GOCACHE="$CI_PROJECT_DIR/.cache/build"
  script:
  - GOARCH=amd64 go build -o mautrix-wsproxy-amd64
  - GOARCH=arm64 go build -o mautrix-wsproxy-arm64
  - GOARCH=arm go build -o mautrix-wsproxy-arm
  artifacts:
    paths:
    - mautrix-wsproxy-amd64
    - mautrix-wsproxy-arm64
    - mautrix-wsproxy-arm
    - example-config.yaml

.build-docker: &build-docker
  image: docker:stable
  stage: build docker
  dependencies:
  - build
  needs:
  - build
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
  - docker pull $CI_REGISTRY_IMAGE:latest || true
  - docker build --pull --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-$DOCKER_ARCH . --file Dockerfile.ci --build-arg EXECUTABLE=./mautrix-wsproxy-$DOCKER_ARCH
  - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-$DOCKER_ARCH
  - docker rmi $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-$DOCKER_ARCH

build docker amd64:
  <<: *build-docker
  tags:
  - amd64
  variables:
    DOCKER_ARCH: amd64

build docker arm64:
  <<: *build-docker
  tags:
  - arm64
  variables:
    DOCKER_ARCH: arm64

manifest:
  stage: manifest
  variables:
    GIT_STRATEGY: none
  before_script:
  - "mkdir -p $HOME/.docker && echo '{\"experimental\": \"enabled\"}' > $HOME/.docker/config.json"
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  needs:
  - build docker amd64
  - build docker arm64
  script:
  - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-amd64
  - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-arm64
  - if [ "$CI_COMMIT_BRANCH" = "master" ]; then docker manifest create $CI_REGISTRY_IMAGE:latest $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-amd64 $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-arm64 && docker manifest push $CI_REGISTRY_IMAGE:latest; fi
  - if [ "$CI_COMMIT_BRANCH" != "master" ]; then docker manifest create $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-amd64 $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-arm64 && docker manifest push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME; fi
  - docker rmi $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-amd64 $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-arm64
